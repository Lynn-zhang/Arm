/*--------将源数据区的数据拷贝到目的数据区-----------------------------------------------*/
.global _start

.text
.equ num, 20    /* 定义数据个数num为20  */

_start:
		ldr  r0, =src      /* r0 指向源数据区的起始位置 */
		ldr  r1, =dst      /* r1 指向目的数据区的起始位置 */
		mov r2, #num     /* 将需复制的字数据个数存放在r2  */
		mov sp, #0x400    /* 将堆栈指针SP指向地址#0x400 */
blockcopy:
		movs  r3,r2, LSR #3    /* 将r2中的值除以8后的结果放入r3 */  
                            /*需要进行的以8个字数据为单位复制的次数*/
		beq copywords        /* 如果结果小于1，即少于8个字节，则转到copywords */
		stmfd  sp!, {r4-r11}    /* 将r4-r11的内容分别存入SP堆栈进行保护 */
octcopy:
		ldmia  r0!, {r4-r11}    /* 从r0所指的源数据区装载8个字节数据到r4-r11中，并更新源数据区的指针r0 */
		stmia  r1!, {r4-r11}    /* 将r4到r11的8个字数据存入r1所指的目的数据区，并更新目标数据区的指针r1 */
		subs r3, r3, #1        /* 每复制一层r3减1 */
		bne octcopy          /* 若r3不为0，则转到octcopy */
		ldmfd  sp!, {r4-r11}   /* 将堆栈内容恢复到r4-r11（即恢复工作寄存器的值）*/
copywords:
		ands r2, r2, #7        /* 剩下不足8个字数据的字的个数 */
		beq stop            /* 若r2=0，则停止，复制数据完成 */
wordcopy:
		ldr  r3, [r0], #4      /* 将源数据区的一个字数据存到目的数据区，并更新源数据区的指针r0 */
		str  r3, [r1], #4      /* 将r3中的一个数据存到目的数据区 ，并更新目标数据区的指针r1*/
		subs r2, r2, #1       /* 数据传输控制计数器减1 */
		bne wordcopy       /* 若r2不等于0，则转到wordcopy */
stop:
        b  stop

.ltorg
src:        /* 定义源数据区 */
.long 1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,2,3,4
dst:        /* 定义目的数据区 */
.long 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
.end